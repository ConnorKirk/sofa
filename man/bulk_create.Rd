% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bulk_create.R
\name{bulk_create}
\alias{bulk_create}
\title{Create documents via the bulk API}
\usage{
bulk_create(doc, cushion = "localhost", dbname, docid = NULL,
  how = "rows", as = "list", ...)
}
\arguments{
\item{doc}{For now, a data.frame only}

\item{cushion}{A cushion name}

\item{dbname}{Database name3
\code{\link{doc_get}}, the XML is given back and you can parse it as normal.}

\item{docid}{Document IDs, ignored for now, eventually, you can pass in a list, or
vector to be the ids for each document created. Has to be the same length as the
number of documents.}

\item{how}{(character) One of rows (default) or columns. If rows, each row becomes a
separate document; if columns, each column becomes a separate document.}

\item{as}{(character) One of list (default) or json}

\item{...}{Curl args passed on to \code{\link[httr]{GET}}}
}
\description{
Create documents via the bulk API
}
\details{
Note that row.names are dropped from data.frame inputs.
}
\examples{
\dontrun{
# From a data.frame
db_delete(dbname="bulktest")
db_create(dbname="bulktest")
bulk_create(mtcars, dbname="bulktest")

db_delete(dbname="bulktest2")
db_create(dbname="bulktest2")
bulk_create(iris, dbname="bulktest2")

# data.frame with 1 or more columns as neseted lists
mtcars$stuff <- list("hello_world")
mtcars$stuff2 <- list("hello_world","things")
db_delete(dbname="bulktest3")
db_create(dbname="bulktest3")
bulk_create(mtcars, dbname="bulktest3")

# From a json character string, or more likely, many json character strings
library("jsonlite")
strs <- as.character(parse_df(mtcars, "columns"))
db_delete(dbname="bulkfromchr")
db_create(dbname="bulkfromchr")
bulk_create(strs, dbname="bulkfromchr")

# From a list of lists
library("jsonlite")
lst <- parse_df(mtcars, tojson=FALSE)
db_delete(dbname="bulkfromchr")
db_create(dbname="bulkfromchr")
bulk_create(lst, dbname="bulkfromchr")

# iris dataset - by rows
db_create(dbname="irisrows")
bulk_create(apply(iris, 1, as.list), dbname="irisrows")

# iris dataset - by columns - doesn't quite work yet
# db_create(dbname="iriscolumns")
# bulk_create(parse_df(iris, "columns", tojson=FALSE), dbname="iriscolumns")
}
}

